{"version":3,"sources":["webpack:///./src/templates/tags.tsx","webpack:///./src/components/Footer.tsx"],"names":["Tags","props","tag","pageContext","edges","totalCount","data","allMarkdownRemark","tagData","allTagYaml","find","n","node","id","toLowerCase","lang","config","title","name","content","description","property","siteUrl","pathContext","slug","facebook","twitter","split","css","NoImage","className","image","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","SiteMain","PostFeed","map","key","fields","post","pageQuery","Footer","SiteFooter","SiteFooterContent","to","Date","getFullYear","footer","SiteFooterNav","href","target","rel","setLightness","colors","darkgrey"],"mappings":"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","file":"component---src-templates-tags-tsx-5fb40043f15297cf3ed4.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { FluidObject } from 'gatsby-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  NoImage,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: FluidObject;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Tags: React.FC<TagTemplateProps> = props => {\n  const tag = props.pageContext.tag ? props.pageContext.tag : '';\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const tagData = props.data.allTagYaml.edges.find(\n    n => n.node.id.toLowerCase() === tag.toLowerCase(),\n  );\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta\n          name=\"description\"\n          content={tagData?.node ? tagData.node.description : ''}\n        />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper css={NoImage}>\n        <header\n          className={`site-archive-header ${tagData?.node?.image ? '' : 'no-image'}`}\n          css={[SiteHeader, SiteArchiveHeader]}\n        >\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <div css={outer} className={`site-header-background ${tagData?.node?.image ? '' : 'no-image'}`}>\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">{tag}</SiteTitle>\n              <SiteDescription className=\"site-description\">\n                {tagData?.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && '1 post'}\n                    {totalCount === 0 && 'No posts'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"https://github.com/scttcper/gatsby-casper\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Casper\n          </a>\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n"],"sourceRoot":""}