{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/how_https_works","result":{"data":{"post":{"__typename":"MdxPost","slug":"/how_https_works","title":"How HTTPS works","date":"02.04.2022","tags":null,"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How HTTPS works\",\n  \"date\": \"2022-04-02T00:00:00.000Z\",\n  \"slug\": \"/how_https_works\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We saw what is HTTP in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codewithkarthik.com/http\"\n  }, \"another post\"), \". So now we will see\\nhow HTTPS works.\"), mdx(\"h3\", null, \"What is HTTPS?\"), mdx(\"p\", null, \"HTTPS means Hyper Text Transfer Protocol Secure.\"), mdx(\"h3\", null, \"Why do we need HTTPS?\"), mdx(\"p\", null, \"To transfer data to a server securely.\"), mdx(\"p\", null, \"Let's say you are sending some money to Alice. You are entering Alice's account number and amount\\nin the bank website's form and clicking submit button. But what if someone who is connected to\\nyour network intercepts your request and changes Alice's account number to their account number.\\nWell, you will lose money if the bank's website does not have HTTPS protocol.\"), mdx(\"p\", null, \"This type of attack is called a middle man attack. In order to prevent this type of attack,\\nwe should encrypt our data and send it to the server. The server will then decrypt data and then use it.\\nThis encryption, decryption, and protection integrity of your data is handled by HTTPS.\"), mdx(\"h3\", null, \"How does HTTPS protect your data?\"), mdx(\"p\", null, \"HTTPS uses Transport Layer Security (TLS) protocol to send data securely to the server. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Factoid: Transport Layer Security is the successor protocol to SSL (Secure Sockets Layer).\\nSSL is now obsolete and TLS is the new name for SSL protocol. Almost all websites that use\\nHTTPS uses TLS but everyone knows/says it is SSL.\\n\\n\")), mdx(\"p\", null, \"Initially, the browser sends a handshake message to the server which contains data like the TLS version the browser supports, which\\ncryptographic algorithm and a secret message called \\\"client random\\\".\"), mdx(\"p\", null, \"Upon receiving the handshake server will send back an acknowledgment along with a digital certificate\\nand random secret called \\\"server random\\\". This digital certificate contains a public key, which can be used to encrypt the messages sent to the server.\"), mdx(\"p\", null, \"Once the client receives the digital certificate containing the public key, it will then send a secret key(premaster_secrett) which is\\nencrypted using the public key from digital certificate. Then server uses its private key to decrypt\\nthe message and will retrieve the secret. By using this client random, server random, and premaster_secret both server and client\\ncan create a secret called master secret. With this Handshake is complete. Now we have a secure secret key.\"), mdx(\"p\", null, \"Now the form data which is sent to the server is encrypted using the master key. This master key is only known to the browser\\nand the server. So middle man cannot decrypt your data without the secret.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"We saw what is HTTP in  another post . So now we will see\nhow HTTPS works. What is HTTPS? HTTPS means Hyper Text Transfer Protocol Secureâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/how_https_works","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}